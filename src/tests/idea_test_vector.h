/*
 *                                Copyright (C) 2017 by Rafael Santiago
 *
 * This is a free software. You can redistribute it and/or modify under
 * the terms of the GNU General Public License version 2.
 *
 */
#ifndef KRYPTOS_TESTS_IDEA_TEST_VECTOR_H
#define KRYPTOS_TESTS_IDEA_TEST_VECTOR_H 1

#include "test_types.h"

test_vector(idea, block_cipher) = {
    add_test_vector_data("\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xB1\xF5\xF7\xF8\x79\x01\x37\x0F",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xB3\x92\x7D\xFF\xB6\x35\x86\x26",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xE9\x87\xE0\x02\x9F\xB9\x97\x85",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\x75\x4A\x03\xCE\x08\xDB\x7D\xAA",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\x00\x01\x00\x01\x00\x00\x00\x00",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01",
                         16,
                         "\x01\x01\x01\x01\x01\x01\x01\x01",
                         "\xE3\xF8\xAF\xF7\xA3\x79\x56\x15",
                         "\x01\x01\x01\x01\x01\x01\x01\x01",
                         8),
    add_test_vector_data("\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C",
                         16,
                         "\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C",
                         "\xAA\xD7\xE5\x26\xE2\x58\x0A\x70",
                         "\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C",
                         8),
    add_test_vector_data("\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00",
                         16,
                         "\xD7\x21\xD0\x5A\xEF\xCA\xA1\x8E",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xD7\x21\xD0\x5A\xEF\xCA\xA1\x8E",
                         8),
    add_test_vector_data("\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01",
                         16,
                         "\xF6\x1D\x37\xEC\x1C\x09\x9D\xE5",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xF6\x1D\x37\xEC\x1C\x09\x9D\xE5",
                         8),
    add_test_vector_data("\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF",
                         16,
                         "\x28\x88\x6D\x81\x43\x99\xE7\x82",
                         "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF",
                         "\x28\x88\x6D\x81\x43\x99\xE7\x82",
                         8),
    add_test_vector_data("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F",
                         16,
                         "\xDB\x2D\x4A\x92\xAA\x68\x27\x3F",
                         "\x00\x11\x22\x33\x44\x55\x66\x77",
                         "\xDB\x2D\x4A\x92\xAA\x68\x27\x3F",
                         8),
    add_test_vector_data("\x2B\xD6\x45\x9F\x82\xC5\xB3\x00\x95\x2C\x49\x10\x48\x81\xFF\x48",
                         16,
                         "\xF1\x29\xA6\x60\x1E\xF6\x2A\x47",
                         "\xEA\x02\x47\x14\xAD\x5C\x4D\x84",
                         "\xF1\x29\xA6\x60\x1E\xF6\x2A\x47",
                         8),
    add_test_vector_data("\x00\x01\x00\x02\x00\x03\x00\x04\x00\x05\x00\x06\x00\x07\x00\x08",
                         16,
                         "\x00\x00\x00\x01\x00\x02\x00\x03",
                         "\x11\xFB\xED\x2B\x01\x98\x6D\xE5",
                         "\x00\x00\x00\x01\x00\x02\x00\x03",
                         8)
};

#endif // KRYPTOS_TESTS_IDEA_TEST_VECTOR_H
