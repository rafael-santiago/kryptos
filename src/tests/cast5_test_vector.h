/*
 *                                Copyright (C) 2017 by Rafael Santiago
 *
 * This is a free software. You can redistribute it and/or modify under
 * the terms of the GNU General Public License version 2.
 *
 */
#ifndef KRYPTOS_TESTS_CAST5_TEST_VECTOR_H
#define KRYPTOS_TESTS_CAST5_TEST_VECTOR_H 1

#include "test_types.h"

test_vector(cast5) = {
    add_test_vector_data("\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xEF\x85\x4D\xE5\xD7\xD1\x89\x5B",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\x3E\x50\x83\x4A\x3A\xFD\xD9\x51",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\x6C\x5F\xA6\x55\x40\x7A\x38\x0E",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\xB0\xDF\xC4\xE5\xC9\xF2\x57\xBC",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00",
                         16,
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         "\x1F\x87\xC1\xDF\xF6\x63\xD7\x07",
                         "\x00\x00\x00\x00\x00\x00\x00\x00",
                         8),
    add_test_vector_data("\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08",
                         16,
                         "\x08\x08\x08\x08\x08\x08\x08\x08",
                         "\xC3\xF8\x18\xB9\xE6\xBF\xAF\x33",
                         "\x08\x08\x08\x08\x08\x08\x08\x08",
                         8),
    add_test_vector_data("\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13",
                         16,
                         "\x13\x13\x13\x13\x13\x13\x13\x13",
                         "\xC4\x3D\x14\xB8\xFF\x13\x25\x1B",
                         "\x13\x13\x13\x13\x13\x13\x13\x13",
                         8),
    add_test_vector_data("\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15",
                         16,
                         "\x15\x15\x15\x15\x15\x15\x15\x15",
                         "\x60\x89\x53\x37\xA0\xC2\x92\xFA",
                         "\x15\x15\x15\x15\x15\x15\x15\x15",
                         8),
    add_test_vector_data("\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69\x69",
                         16,
                         "\x69\x69\x69\x69\x69\x69\x69\x69",
                         "\x22\x5B\xED\x53\xD3\x4E\x01\xF2",
                         "\x69\x69\x69\x69\x69\x69\x69\x69",
                         8),
    add_test_vector_data("\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77\x77",
                         16,
                         "\x77\x77\x77\x77\x77\x77\x77\x77",
                         "\x2E\xDD\xD0\x77\xEC\x82\xD4\x2C",
                         "\x77\x77\x77\x77\x77\x77\x77\x77",
                         8),
    add_test_vector_data("\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F",
                         16,
                         "\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F",
                         "\xFA\x1F\xDC\xE1\x35\xBD\xFA\x6A",
                         "\x7F\x7F\x7F\x7F\x7F\x7F\x7F\x7F",
                         8),
    add_test_vector_data("\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80",
                         16,
                         "\x80\x80\x80\x80\x80\x80\x80\x80",
                         "\xF4\x81\xC5\x69\x29\x5D\xA7\xB8",
                         "\x80\x80\x80\x80\x80\x80\x80\x80",
                         8),
    add_test_vector_data("\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA",
                         16,
                         "\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA",
                         "\x5E\x51\xCB\xC9\x51\xFE\xD9\xED",
                         "\xAA\xAA\xAA\xAA\xAA\xAA\xAA\xAA",
                         8),
    add_test_vector_data("\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB",
                         16,
                         "\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB",
                         "\x16\x2D\x69\x7D\x59\x9B\xEB\xAF",
                         "\xAB\xAB\xAB\xAB\xAB\xAB\xAB\xAB",
                         8),
    add_test_vector_data("\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC",
                         16,
                         "\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC",
                         "\x74\xB7\xAC\xB1\xC4\xE5\x4E\x47",
                         "\xCC\xCC\xCC\xCC\xCC\xCC\xCC\xCC",
                         8),
    add_test_vector_data("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F",
                         16,
                         "\x00\x11\x22\x33\x44\x55\x66\x77",
                         "\xDF\x7F\x1D\xD2\x02\x17\x84\x2A",
                         "\x00\x11\x22\x33\x44\x55\x66\x77",
                         8),
    add_test_vector_data("\x2B\xD6\x45\x9F\x82\xC5\xB3\x00\x95\x2C\x49\x10\x48\x81\xFF\x48",
                         16,
                         "\xEA\x02\x47\x14\xAD\x5C\x4D\x84",
                         "\x7A\xEE\x54\x05\x2C\xB3\x7F\x9D",
                         "\xEA\x02\x47\x14\xAD\x5C\x4D\x84",
                         8),
    add_test_vector_data("\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF",
                         16,
                         "\xF7\xE0\xC7\xF4\x9E\xFE\x97\x34",
                         "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF",
                         "\xF7\xE0\xC7\xF4\x9E\xFE\x97\x34",
                         8),
    add_test_vector_data("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F",
                         16,
                         "\xE4\x4B\x90\xE3\x66\x4F\x87\xA3",
                         "\x00\x11\x22\x33\x44\x55\x66\x77",
                         "\xE4\x4B\x90\xE3\x66\x4F\x87\xA3",
                         8),
    add_test_vector_data("\x2B\xD6\x45\x9F\x82\xC5\xB3\x00\x95\x2C\x49\x10\x48\x81\xFF\x48",
                         16,
                         "\x63\x47\x73\x5B\x3C\x61\xB2\xF6",
                         "\xEA\x02\x47\x14\xAD\x5C\x4D\x84",
                         "\x63\x47\x73\x5B\x3C\x61\xB2\xF6",
                         8)
};

#endif
