/*
 *                                Copyright (C) 2019 by Rafael Santiago
 *
 * This is a free software. You can redistribute it and/or modify under
 * the terms of the GNU General Public License version 2.
 *
 */
#ifndef KRYPTOS_TESTS_BLAKE2B512_TEST_VECTOR_H
#define KRYPTOS_TESTS_BLAKE2B512_TEST_VECTOR_H 1

#include "test_types.h"

test_vector(blake2b512, hash) = {
    // INFO(Rafael): Test vector from RFC-7693.
    add_test_vector_data("abc", 3,
                         "BA80A53F981C4D0D6A2797B69F12F6E9"
                         "4C212F14685AC4B74B12BB6FDBFFA2D1"
                         "7D87C5392AAB792DC252D5DE4533CC95"
                         "18D38AA8DBF1925AB92386EDD4009923", 128,
                         "\xBA\x80\xA5\x3F\x98\x1C\x4D\x0D\x6A\x27\x97\xB6\x9F\x12\xF6\xE9"
                         "\x4C\x21\x2F\x14\x68\x5A\xC4\xB7\x4B\x12\xBB\x6F\xDB\xFF\xA2\xD1"
                         "\x7D\x87\xC5\x39\x2A\xAB\x79\x2D\xC2\x52\xD5\xDE\x45\x33\xCC\x95"
                         "\x18\xD3\x8A\xA8\xDB\xF1\x92\x5A\xB9\x23\x86\xED\xD4\x00\x99\x23", 64)
};

struct keyed_blake2b_test_vector_ctx {
    kryptos_u8_t *in;
    size_t in_size;
    kryptos_u8_t *key;
    size_t key_size;
    kryptos_u8_t *hash;
    size_t hash_size;
    kryptos_u8_t *xhash;
    size_t xhash_size;
};

#define add_test_step(i, is, k, ks, h, hs, xh, xhs) { i, is, k, ks, h, hs, xh, xhs }

static struct keyed_blake2b_test_vector_ctx blake2b512_keyed_test_vector[] = {
    // INFO(Rafael): Test vectors extracted from BLAKE2 reference at <https://github.com/BLAKE2/BLAKE2>.
    add_test_step("", 0,
                  "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F",  64,
                  "\x10\xEB\xB6\x77\x00\xB1\x86\x8E\xFB\x44\x17\x98\x7A\xCF\x46\x90"
                  "\xAE\x9D\x97\x2F\xB7\xA5\x90\xC2\xF0\x28\x71\x79\x9A\xAA\x47\x86"
                  "\xB5\xE9\x96\xE8\xF0\xF4\xEB\x98\x1F\xC2\x14\xB0\x05\xF4\x2D\x2F"
                  "\xF4\x23\x34\x99\x39\x16\x53\xDF\x7A\xEF\xCB\xC1\x3F\xC5\x15\x68",  64,
                  "10EBB67700B1868EFB4417987ACF4690AE9D972FB7A590C2F02871799AAA4786"
                  "B5E996E8F0F4EB981FC214B005F42D2FF4233499391653DF7AEFCBC13FC51568", 128),
    add_test_step("\x00", 1,
                  "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F",  64,
                  "\x96\x1F\x6D\xD1\xE4\xDD\x30\xF6\x39\x01\x69\x0C\x51\x2E\x78\xE4"
                  "\xB4\x5E\x47\x42\xED\x19\x7C\x3C\x5E\x45\xC5\x49\xFD\x25\xF2\xE4"
                  "\x18\x7B\x0B\xC9\xFE\x30\x49\x2B\x16\xB0\xD0\xBC\x4E\xF9\xB0\xF3"
                  "\x4C\x70\x03\xFA\xC0\x9A\x5E\xF1\x53\x2E\x69\x43\x02\x34\xCE\xBD",  64,
                  "961F6DD1E4DD30F63901690C512E78E4B45E4742ED197C3C5E45C549FD25F2E4"
                  "187B0BC9FE30492B16B0D0BC4EF9B0F34C7003FAC09A5EF1532E69430234CEBD", 128),
    add_test_step("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B", 28,
                  "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F",  64,
                  "\x10\xBD\xF0\xCA\xA0\x80\x27\x05\xE7\x06\x36\x9B\xAF\x8A\x3F\x79"
                  "\xD7\x2C\x0A\x03\xA8\x06\x75\xA7\xBB\xB0\x0B\xE3\xA4\x5E\x51\x64"
                  "\x24\xD1\xEE\x88\xEF\xB5\x6F\x6D\x57\x77\x54\x5A\xE6\xE2\x77\x65"
                  "\xC3\xA8\xF5\xE4\x93\xFC\x30\x89\x15\x63\x89\x33\xA1\xDF\xEE\x55",  64,
                  "10BDF0CAA0802705E706369BAF8A3F79D72C0A03A80675A7BBB00BE3A45E5164"
                  "24D1EE88EFB56F6D5777545AE6E27765C3A8F5E493FC308915638933A1DFEE55", 128),
    add_test_step("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F"
                  "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4A\x4B\x4C\x4D\x4E\x4F"
                  "\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5A\x5B\x5C\x5D\x5E\x5F\x60", 97,
                  "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F",  64,
                  "\x31\xFC\x79\x73\x8B\x87\x72\xB3\xF5\x5C\xD8\x17\x88\x13\xB3\xB5"
                  "\x2D\x0D\xB5\xA4\x19\xD3\x0B\xA9\x49\x5C\x4B\x9D\xA0\x21\x9F\xAC"
                  "\x6D\xF8\xE7\xC2\x3A\x81\x15\x51\xA6\x2B\x82\x7F\x25\x6E\xCD\xB8"
                  "\x12\x4A\xC8\xA6\x79\x2C\xCF\xEC\xC3\xB3\x01\x27\x22\xE9\x44\x63",  64,
                  "31FC79738B8772B3F55CD8178813B3B52D0DB5A419D30BA9495C4B9DA0219FAC"
                  "6DF8E7C23A811551A62B827F256ECDB8124AC8A6792CCFECC3B3012722E94463", 128),
    add_test_step("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F"
                  "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4A\x4B\x4C\x4D\x4E\x4F"
                  "\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5A\x5B\x5C\x5D\x5E\x5F"
                  "\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6A\x6B\x6C\x6D\x6E\x6F"
                  "\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7A\x7B\x7C\x7D\x7E\x7F"
                  "\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x8B\x8C\x8D\x8E\x8F"
                  "\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9A\x9B\x9C\x9D\x9E\x9F"
                  "\xA0\xA1\xA2\xA3\xA4\xA5\xA6\xA7\xA8\xA9\xAA\xAB\xAC\xAD\xAE\xAF"
                  "\xB0\xB1\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xBB\xBC\xBD\xBE\xBF"
                  "\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xCB\xCC\xCD\xCE\xCF"
                  "\xD0\xD1\xD2\xD3\xD4\xD5\xD6\xD7\xD8\xD9\xDA\xDB\xDC\xDD\xDE\xDF"
                  "\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\xE9\xEA\xEB\xEC\xED\xEE\xEF"
                  "\xF0\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA\xFB\xFC\xFD\xFE", 255,
                  "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F"
                  "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F"
                  "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"
                  "\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3A\x3B\x3C\x3D\x3E\x3F",  64,
                  "\x14\x27\x09\xD6\x2E\x28\xFC\xCC\xD0\xAF\x97\xFA\xD0\xF8\x46\x5B"
                  "\x97\x1E\x82\x20\x1D\xC5\x10\x70\xFA\xA0\x37\x2A\xA4\x3E\x92\x48"
                  "\x4B\xE1\xC1\xE7\x3B\xA1\x09\x06\xD5\xD1\x85\x3D\xB6\xA4\x10\x6E"
                  "\x0A\x7B\xF9\x80\x0D\x37\x3D\x6D\xEE\x2D\x46\xD6\x2E\xF2\xA4\x61", 64,
                  "142709D62E28FCCCD0AF97FAD0F8465B971E82201DC51070FAA0372AA43E9248"
                  "4BE1C1E73BA10906D5D1853DB6A4106E0A7BF9800D373D6DEE2D46D62EF2A461", 128)
};

#undef add_test_step

#endif
