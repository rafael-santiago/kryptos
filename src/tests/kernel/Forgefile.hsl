#
#                                Copyright (C) 2017 by Rafael Santiago
#
# This is a free software. You can redistribute it and/or modify under
# the terms of the GNU General Public License version 2.
#
#

include on freebsd ~/toolsets/freebsd/freebsd-module.hsl
include on netbsd ~/toolsets/netbsd/netbsd-module.hsl
include on linux ~/toolsets/linux/linux-module.hsl
include on windows ~/toolsets/null/null.hsl
include mkclean.hsl
include krun.hsl

local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;
local var modname type string;

local var LKMTOOL type string;

project kryptos-test-mod : toolset $LKMTOOL : "main.c", $includes, $cflags, $libraries, $ldflags, $modname;

kryptos-test-mod.preloading() {
    if (hefesto.sys.os_name() == "freebsd") {
        $LKMTOOL = "freebsd-kld";
    } else if (hefesto.sys.os_name() == "netbsd") {
        $LKMTOOL = "netbsd-module";
    } else if (hefesto.sys.os_name() == "linux") {
        $LKMTOOL = "linux-lkm";
    } else if (hefesto.sys.os_name() == "windows") {
        $LKMTOOL = "no-tool-any-set";
        var exit_code type int;
        $exit_code = hefesto.sys.forge("win-kryptos-test-sys", "WinForgefile.hsl", hefesto.project.cmdline());
        hefesto.project.abort($exit_code);
    }
}

kryptos-test-mod.prologue() {
    $includes.add_item(hefesto.sys.make_path(hefesto.sys.pwd(), "../../"));
    $includes.add_item(hefesto.sys.pwd());

    if (hefesto.sys.os_name() == "linux") {
        $includes.add_item("/usr/include");
        # INFO(Rafael): By now let's enable it by default in Linux, instead of detecting during compile-time as in FreeBSD.
        $cflags.add_item("-std=gnu99");
    }

    var option type list;
    $option = hefesto.sys.get_option("clean");

    if ($option.count() > 0) {
        mkclean($includes);
        hefesto.sys.echo("*** All clean!\n");
        hefesto.project.abort(0);
    }

    $option = hefesto.sys.get_option("no-hmac-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DKRYPTOS_NO_HMAC_TESTS=1");
    }

    $option = hefesto.sys.get_option("skip-dh-xchg-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DSKIP_DH_XCHG_TESTS=1");
    }

    $option = hefesto.sys.get_option("skip-rsa-oaep-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DSKIP_RSA_OAEP_TESTS=1");
    }

    $option = hefesto.sys.get_option("skip-elgamal-oaep-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DSKIP_ELGAMAL_OAEP_TESTS=1");
    }

    $option = hefesto.sys.get_option("skip-rsa-signature-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DSKIP_RSA_SIGNATURE_TESTS=1");
    }

    $option = hefesto.sys.get_option("skip-dsa-signature-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DSKIP_DSA_SIGNATURE_TESTS=1");
    }

    $option = hefesto.sys.get_option("skip-ecdsa-signature-tests");
    if ($option.count() > 0) {
        $cflags.add_item("-DSKIP_ECDSA_SIGNATURE_TESTS=1");
    }

    $option = hefesto.sys.get_option("dh-use-q-size");
    if ($option.count() > 0) {
        $cflags.add_item("-DDH_USE_Q_SIZE=1");
    }

    # INFO(Rafael): Only define KRYPTOS_KERNEL_MODE will guide the compiler across the build of the kryptos kernel mode version.
    #               Notice that no .ar file is generated. When adding the path "../.." to the includes list the object files from
    #               kryptos are automatically linked together.
    $cflags.add_item("-DKRYPTOS_KERNEL_MODE=1");
    $cflags.add_item("-DKRYPTOS_DATA_WIPING_WHEN_FREEING_MEMORY=1");
    $cflags.add_item("-DKRYPTOS_ENSURE_MEMSET_CLEANUPS=1");

    $modname = "kryptos_test";
}

kryptos-test-mod.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        hefesto.sys.echo("*** Test module successfully compiled.\n");

        if (hefesto.sys.os_name() == "linux" || hefesto.sys.os_name() == "freebsd") {
            $modname = $modname + ".ko";
        } else if (hefesto.sys.os_name() == "netbsd") {
            $modname = $modname + ".kmod";
        }

        # WARN(Rafael): Buckle up!

        var exit_code type int;
        $exit_code = krun($modname);

        if ($exit_code != 0) {
            hefesto.project.abort($exit_code);
        }
    } else {
        hefesto.sys.echo("~~~ Error during test module compilation.\n");
    }
}
