#
#                                Copyright (C) 2017 by Rafael Santiago
#
# This is a free software. You can redistribute it and/or modify under
# the terms of the GNU General Public License version 2.
#
#

include Toolsets.hsl
include ~/toolsets/common/utils/lang/c/dependency_scanner.hsl

local var toolset_name type string;

local var sources type list;
local var includes type list;
local var cflags type list;
local var libraries type list;
local var ldflags type list;
local var deps type string;

project kryptos : toolset $toolset_name : dependencies $deps :
                $sources, $includes, $cflags, $libraries, $ldflags, "libkryptos.a";

kryptos.preloading() {
    $toolset_name = get_lib_toolset();
}

kryptos.prologue() {
    $includes = hefesto.sys.get_option("includes");
    $cflags = hefesto.sys.get_option("cflags");
    $deps = get_c_cpp_deps();
    $sources.ls(".*\\.c$");

    if ($toolset_name.match("^clang") == 1) {
        $cflags.add_item("-Wno-pointer-sign");
        $cflags.add_item("-Wno-invalid-source-encoding");
    }

    if (hefesto.sys.os_name() == "windows" && $cflags.index_of("-DNO_KRYPTOS_C99_SUPPORT")) {
        # INFO(Rafael): Let's enable c99 capabilities by default.
        $cflags.add_item("-std=c99");
    }
}

kryptos.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        var oldcwd type string;

        $oldcwd = hefesto.sys.pwd();

        if (hefesto.sys.cd("tests") == 0) {
            hefesto.sys.echo("~~~ TESTS DIRECTORY NOT FOUND!\n");
            hefesto.project.abort(1);
        }

        hefesto.sys.forge("kryptos-tests", "Forgefile.hsl", "--forgefiles=Forgefile.hsl " +
                                                            "--Forgefile-projects=kryptos-tests " +
                                                            "--bin-output-dir=bin --obj-output-dir=o " +
                                                            "--libraries=../../lib,cutest/src/lib " +
                                                            "--ldflags=-lkryptos,-lcutest --includes=../,cutest/src " +
                                                            hefesto.project.cmdline());
        var exit_code type int;
        $exit_code = hefesto.sys.last_forge_result();

        if ($exit_code != 0) {
            hefesto.project.abort($exit_code);
        }

        hefesto.sys.cd($oldcwd);

        var option type list;

        $option = hefesto.sys.get_option("mk-samples");

        if ($option.count() > 0) {
            if (hefesto.sys.cd("samples")) {
                $exit_code = hefesto.sys.run("hefesto"); # INFO(Rafael): Let's take advantage of the '.ivk'. Less one point
                                                         #               to manage when adding new samples.

                if ($exit_code != 0) {
                    hefesto.project.abort($exit_code);
                }

                hefesto.sys.cd($oldcwd);
            } else {
                hefesto.sys.echo("BUILD ERROR: unable to find samples directory.\n");
                hefesto.sys.exit(1);
            }
        }
    }
}
